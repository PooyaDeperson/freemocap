/* =========================
   RESET + GLOBAL
   ========================= */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap');

:root {
  --black: #000;
  --red: #c8102e;
  --blue: #0056b3;
  --pink: #d81b60;
  --white: #fff;
}

/* base / reset */
html, body, #root {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  font-size: 12px;       /* base font size */
  line-height: 20px;     /* base line height */
  font-family: 'Inter', system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background: var(--white);
  color: var(--black);
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* element resets */
ul, ol { list-style: none; }
a { text-decoration: none; color: inherit; }
img, picture, video, canvas, svg { display: block; max-width: 100%; height: auto; }
button, input, select, textarea { font: inherit; background: none; border: none; outline: none; }
button { cursor: pointer; }
h1,h2,h3,h4,h5,h6 { font-size: inherit; font-weight: inherit; }
strong, b { font-weight: bold; }
blockquote, q { quotes: none; }
blockquote::before, blockquote::after, q::before, q::after { content: ''; }

/* =========================
   UTILITIES (Tailwind-like)
   ========================= */

/* z-index */
.z-1 { z-index: 1; } .z-2 { z-index: 2; } .z-3 { z-index: 3; } .z-4 { z-index: 4; }
.z-5 { z-index: 5; } .z-6 { z-index: 6; } .z-7 { z-index: 7; } .z-8 { z-index: 8; }
.z-9 { z-index: 9; } .z-10 { z-index: 10; }

/* display / flex */
.flex { display: flex; }
.flex-row { flex-direction: row; }
.flex-col { flex-direction: column; }
.items-center { align-items: center; }
.justify-center { justify-content: center; }

/* flex (proportions) */
.flex-1 { flex: 1; }
.flex-2 { flex: 2; }
.flex-3 { flex: 3; }
/* fractional helper used in layout */
.flex-15 { flex: 1.5; }   /* left / middle proportions in example */
.flex-grow { flex-grow: 1; }

/* gaps */
.gap-1 { gap: 4px; }
.gap-2 { gap: 8px; }
.gap-3 { gap: 12px; }

/* padding */
.p-0 { padding: 0; }
.p-1 { padding: 4px; }
.p-2 { padding: 8px; }
.p-3 { padding: 12px; }
.p-4 { padding: 16px; }

/* margin */
.m-0 { margin: 0; }
.m-1 { margin: 4px; }
.m-2 { margin: 8px; }
.m-3 { margin: 12px; }
.m-4 { margin: 16px; }

/* widths/heights */
.w-full { width: 100%; }
.h-full { height: 100%; }
.h-25 { height: 25px; }
.h-30 { height: 30px; }
.h-40 { height: 40px; }
.h-70 { height: 70px; }
.h-100 { height: 100px; }

/* borders */
.border-2 { border: 2px solid var(--black); }
.border-b-2 { border-bottom: 2px solid var(--black); }

/* radii */
.rounded-sm { border-radius: 4px; }
.rounded-md { border-radius: 6px; }
.rounded-lg { border-radius: 10px; }

/* overflow */
.overflow-hidden { overflow: hidden; }

/* background colors */
.bg-red { background-color: var(--red); }
.bg-blue { background-color: var(--blue); }
.bg-black { background-color: var(--black); }
.bg-pink { background-color: var(--pink); }
.bg-white { background-color: var(--white); }

/* text */
.text-center { text-align: center; }

/* helpers */
.hidden { display: none; }

/* =========================
   OPTIONAL: small layout helpers (not required)
   ========================= */
/* If you prefer to add one semantic class instead of long lists on DOM, these are optional.
   Keep in mind the goal was to add small utilities directly on the DOM. */
.app-root { display: flex; flex-direction: column; height: 100%; } /* optional */
